/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package model_util;

import org.hibernate.Session;
import java.util.ArrayList;
import java.util.List;
import org.hibernate.HibernateException;
import org.hibernate.Query;

/**
 * UserPass_Use generated by hbm2java
 */
public class hqlQueriesHelper {

    public static List ExecuteSelectHqlQuery_WithPreparedSession(Session session, String hql, String suffix, int maxRows) {
        List resultList = new ArrayList();
        try {
            Query q = session.createQuery(hql + suffix);
            q.setFirstResult(0);
            q.setMaxResults(maxRows);
            resultList = q.list();
        } catch (HibernateException he) {
            he.printStackTrace();
        }
        return resultList;
    }

    public static List ExecuteSelectHqlQuery_WithPreparedSession(Session session, String hql, String suffix) {
         List resultList = new ArrayList();
        try {

            Query q = session.createQuery(hql + suffix);

            resultList = q.list();

        } catch (HibernateException he) {
            he.printStackTrace();
        }
        return resultList;
    }
    
    
    public static List ExecuteSelectHqlQuery_WithClosedSession(String hql, String suffix) {
        List resultList = new ArrayList();
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        try {
            Query q = session.createQuery(hql+suffix);
            resultList = q.list();
            session.getTransaction().commit();
            session.close();
        } catch (HibernateException he) {
            he.printStackTrace();
        }
        return resultList;
    }

    public static void executeAddHQLQuery_WithPreparedSession(Object designatedObject, Session session) {

        try {

            session.persist(designatedObject);

        } catch (HibernateException he) {
            he.printStackTrace();
        }

    }
    
    public static void executeUpdateHQLQuery_WithPreparedSession(Object designatedObject, Session session) {

        try {

            session.update(designatedObject);

        } catch (HibernateException he) {
            he.printStackTrace();
        }

    }
    
}
