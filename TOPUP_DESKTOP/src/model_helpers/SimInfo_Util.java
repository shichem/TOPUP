package model_helpers;

import java.util.List;
import model_db.Operator;
import model_db.PortInfo;
import model_db.SimInfo;
import model_db.SimType;
import model_db.TransactionSolde;
import model_util.HibernateUtil;
import model_util.hqlQueriesHelper;
import org.hibernate.Session;

/**
 * SimInfo generated by hbm2java
 */
public class SimInfo_Util {

    public List getAllSimInfo(Session session, String suffix) {
        return hqlQueriesHelper.ExecuteSelectHqlQuery_WithPreparedSession(session, "FROM SimInfo where flag=0", suffix);

    }
    public Integer getAllSimInfoByOperator(String op) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        List list = hqlQueriesHelper.ExecuteSelectHqlQuery_WithPreparedSession(session, "FROM SimInfo where flag=0 and operator.operatorDesc ='"+op+"'", "");

        if (list.isEmpty()) {
            return 0;
        } else {
            return list.size();
        }

    }
      public Integer countSimInfoByStatus(String status) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        List list = hqlQueriesHelper.ExecuteSelectHqlQuery_WithPreparedSession(session, "FROM SimInfo where flag=0 and statusInfo.statusInfoDesc ='"+status+"'", "");

        if (list.isEmpty()) {
            return 0;
        } else {
            return list.size();
        }

    }
     public Double getLastSoldByOperatorEstimed(String op) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        List list = hqlQueriesHelper.ExecuteSelectHqlQuery_WithPreparedSession(session, " SELECT SUM(lastEstimatedSolde)  FROM SimInfo where flag=0 and operator.operatorDesc ='"+op+"'", "");

        if (list.isEmpty()) {
            return (Double) 0.0;
        } else {
            System.out.println("model_helpers.SimInfo_Util.getLastSoldByOperatorEstimed()"+list.size());
          return  (Double) list.get(0);
        }

    }
    
     public Double getLasSoldByOperator(String op) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        List list = hqlQueriesHelper.ExecuteSelectHqlQuery_WithPreparedSession(session, "SELECT SUM(lastSolde)  FROM SimInfo where flag=0 and operator.operatorDesc ='"+op+"'", "");

        if (list.isEmpty()) {
            return 0.0;
        } else {
                        System.out.println("model_helpers.SimInfo_Util.getLasSoldByOperator()"+list.size());

            return    (Double) list.get(0);
        }

    }

    public List getAllSimInfo(String suffix) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        return hqlQueriesHelper.ExecuteSelectHqlQuery_WithPreparedSession(session, "FROM SimInfo where flag=0", suffix);

    }

    public SimInfo getSimInfo_by_id(Session session, int id, String suffix) {
        List list = hqlQueriesHelper.ExecuteSelectHqlQuery_WithPreparedSession(session, "FROM SimInfo where flag=0 and idsimInfo = " + id, suffix);
        if (list.isEmpty()) {
            return null;
        } else {
            return ((SimInfo) list.get(0));
        }
    }

    public List getSimInfo_by_portInfo(Session session, PortInfo portInfo, String suffix) {
        return hqlQueriesHelper.ExecuteSelectHqlQuery_WithPreparedSession(session, "FROM SimInfo where flag=0 and portInfo = " + portInfo.getIdportInfo(), suffix);

    }

    public List getSimInfo_by_operator(Session session, Operator operator, String suffix) {
        return hqlQueriesHelper.ExecuteSelectHqlQuery_WithPreparedSession(session, "FROM SimInfo where flag=0 and operator = " + operator.getIdoperator(), suffix);

    }

    public List getSimInfo_by_simType(Session session, SimType simType, String suffix) {
        return hqlQueriesHelper.ExecuteSelectHqlQuery_WithPreparedSession(session, "FROM SimInfo where flag=0 and simType = " + simType.getIdsimType(), suffix);

    }
    
     public List getSimInfo_by_operator( Integer operator,String simType) {
                 Session session = HibernateUtil.getSessionFactory().openSession();
        return hqlQueriesHelper.ExecuteSelectHqlQuery_WithPreparedSession(session, "FROM SimInfo where flag=0 and operator.idoperator = " + operator, " "
                + "and simType.simTypeDesc lIKE '%"+simType+"%' ");

    }
    
    public List getSimInfo_by_simnumberLike(Session session, String simnumber, String suffix) {
        return hqlQueriesHelper.ExecuteSelectHqlQuery_WithPreparedSession(session, "FROM SimInfo where flag=0 and simnumber LIKE '%" + simnumber + "%'", suffix);
    }

    public List getSimInfo_by_simnumber(Session session, String simnumber, String suffix) {
        return hqlQueriesHelper.ExecuteSelectHqlQuery_WithPreparedSession(session, "FROM SimInfo where flag=0 and simnumber = '" + simnumber + "'", suffix);
    }

    public List getSimInfo_by_operator_simnumber(Session session, Operator operator, String simnumber, String suffix) {
        return hqlQueriesHelper.ExecuteSelectHqlQuery_WithPreparedSession(session, "FROM SimInfo where flag=0 "
                + "and operator = " + operator.getIdoperator() + " "
                + "and simnumber = '" + simnumber + "'", suffix);
    }

    public List getSimInfo_by_solde(Session session, double soldemin, double soldemax, String suffix) {
        return hqlQueriesHelper.ExecuteSelectHqlQuery_WithPreparedSession(session, "FROM SimInfo where flag=0 "
                + "and (lastSolde >= " + soldemin + " and lastSolde <= " + soldemax + ")",
                suffix);
    }

    public void addSimInfo(SimInfo adt, Session session) {
        hqlQueriesHelper.executeAddHQLQuery_WithPreparedSession(adt, session);
    }

    public void updateSimInfo(SimInfo adt, Session session) {
        hqlQueriesHelper.executeUpdateHQLQuery_WithPreparedSession(adt, session);
    }

}
