/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package topup_desktop;

import custom_package.simUI;
import custom_vars.staticVars;
import custom_vars.uiVars;
import general_helpers.dbhelper;
import javax.swing.ImageIcon;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author kaa_aziz
 */
public class login_frame extends javax.swing.JFrame {

    /**
     * Creates new form login_frame
     */

    private String username;
    private String password;

    public static ImageIcon img = new ImageIcon("Icons\\.png");


    public login_frame() {
        initComponents();

        this.setIconImage(img.getImage());
        try {
            try {
                //UIManager.setLookAndFeel("com.jtattoo.plaf.mint.MintLookAndFeel");
                UIManager.setLookAndFeel("com.jtattoo.plaf.mcwin.McWinLookAndFeel");
                //UIManager.setLookAndFeel("com.jtattoo.plaf.aero.AeroLookAndFeel");
                //UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");
                //UIManager.setLookAndFeel("com.jtattoo.plaf.aluminium.AluminiumLookAndFeel");
                //UIManager.setLookAndFeel("com.jtattoo.plaf.bernstein.BernsteinLookAndFeel");
                //UIManager.setLookAndFeel("com.jtattoo.plaf.fast.FastLookAndFeel");
                //UIManager.setLookAndFeel("com.jtattoo.plaf.graphite.GraphiteLookAndFeel");
                //UIManager.setLookAndFeel("com.jtattoo.plaf.hifi.HiFiLookAndFeel");
                //UIManager.setLookAndFeel("com.jtattoo.plaf.luna.LunaLookAndFeel");
                //UIManager.setLookAndFeel("com.jtattoo.plaf.noire.NoireLookAndFeel");
                //UIManager.setLookAndFeel("com.jtattoo.plaf.smart.SmartLookAndFeel");
                //UIManager.setLookAndFeel("com.birosoft.liquid.LiquidLookAndFeel");
                //UIManager.setLookAndFeel("com.alee.laf.WebLookAndFeel");
                SwingUtilities.updateComponentTreeUI(this);
                //on passe au UIManager le nom complet de la classe du Look and Feel
                //naturellement, celle-ci doit Ãªtre disponible dans le CLASSPATH
            } catch (InstantiationException e) {
                System.out.println("yop");
            } catch (ClassNotFoundException e) {
                System.out.println("yap");
            } catch (UnsupportedLookAndFeelException e) {
                System.out.println("yip");
            } catch (IllegalAccessException e) {
                System.out.println("yep");
            }

        } catch (Exception eeeee) {

        }

        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem4 = new javax.swing.JMenuItem();
        jButton1 = new javax.swing.JButton();
        connectButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        username_T = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        password_T = new javax.swing.JPasswordField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();

        jMenuItem4.setText("jMenuItem4");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Connexion");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton1.setText("Quitter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        connectButton.setText("Se connecter");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel11.setText("Nom d'utilisateur: ");

        jLabel12.setText("Mot de passe: ");

        jMenu1.setText("Fichier");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, 0));
        jMenuItem1.setText("Se connecter");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("?");

        jMenuItem5.setText("A propos");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(username_T, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(password_T, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addComponent(connectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(username_T, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(password_T, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(connectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        connectButton.doClick();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        // TODO add your handling code here:
        connectButton.setEnabled(false);
        username = username_T.getText();
        password = password_T.getText();
        System.out.println("'" + password + "'");
        if (username.length() == 0 || password.length() == 0) {
            connectButton.setEnabled(true);
            uiVars.defaultErrorMessage(this, "ParamÃ¨tres invalides", "Veuillez vÃ©rifier les donnÃ©es introduites !!!");
        } else {
            //Verifier les dadmin   adonnÃ©es utiliasteurs
            new Thread() {
                public void run() {
                    ProcessingDialog processDiag = new ProcessingDialog();
                    try {
                        processDiag.setTitle("Tentative d'authentification");
                        processDiag.setVisible(true);
                        ProcessingDialog.waiting_message.setText("VÃ©rification des donnÃ©es fournies ...");
                        /*if ((staticVars.globalSession.isOpen()) || (staticVars.globalSession.isConnected())) {
                            staticVars.globalSession.close();
                        }
                        staticVars.globalSession = HibernateUtil.getSessionFactory().openSession();
                        staticVars.globalSession.beginTransaction();*/

                        staticVars.actualUser = new dbhelper().checkAUthentification(username, password);
                        if (staticVars.actualUser != null) {
                            main_interface mainInterface = new main_interface();
                            ProcessingDialog.waiting_message.setText("TÃ©lÃ©chargement de la configuration ...");
                            System.out.println("TÃ©lÃ©chargement de la configuration ...");
                            ProcessingDialog.waiting_message.setText("VÃ©rification des identificateurs de la station ...");
                            System.out.println("VÃ©rification des identificateurs de la station ...");

                            // staticVars.globalSession.getTransaction().commit();
                            for (int i = 0; i < staticVars.actualUser.getSimUIVestor().size(); i++) {
                                simUI elementAt = staticVars.actualUser.getSimUIVestor().elementAt(i);
                                if (elementAt.getIsNew() == -1) {
                                    elementAt.getSimNumButton().setText(elementAt.getSimNumber());
                                    elementAt.getPinCodeButton().setText(elementAt.getPinCode());
                                } else {
                                    if (!elementAt.getSimNumber().equals("")) {
                                        elementAt.getSimNumButton().setText(elementAt.getSimNumber());
                                    } else {
                                        elementAt.getSimNumButton().setEnabled(true);
                                    }
                                    elementAt.getPinCodeButton().setEnabled(true);
                                }
                                if (elementAt.getOperatorName().equals("Djezzy")) {
                                    main_interface.djezzyChipsPanel.add(elementAt.getSimNumButton());
                                    main_interface.djezzyChipsPanel.add(elementAt.getPinCodeButton());
                                    main_interface.djezzyChipsPanel.add(elementAt.getSoldeLabel());
                                    main_interface.djezzyChipsPanel.add(elementAt.getSaveButton());
                                }
                                if (elementAt.getOperatorName().equals("Mobilis")) {
                                    main_interface.mobilisChipsPanel.add(elementAt.getSimNumButton());
                                    main_interface.mobilisChipsPanel.add(elementAt.getPinCodeButton());
                                    main_interface.mobilisChipsPanel.add(elementAt.getSoldeLabel());
                                    main_interface.mobilisChipsPanel.add(elementAt.getSaveButton());
                                }
                                if (elementAt.getOperatorName().equals("Ooredoo")) {
                                    main_interface.OoredooChipsPanel.add(elementAt.getSimNumButton());
                                    main_interface.OoredooChipsPanel.add(elementAt.getPinCodeButton());
                                    main_interface.OoredooChipsPanel.add(elementAt.getSoldeLabel());
                                    main_interface.OoredooChipsPanel.add(elementAt.getSaveButton());
                                }
                            }
                            processDiag.dispose();

                            connectButton.setVisible(true);
                            mainInterface.setVisible(true);
                            login_frame.getWindows()[0].setVisible(false);

                        } else {
                            processDiag.dispose();

                            uiVars.defaultErrorMessage(login_frame.this, "Authentification Ã©chouÃ©e", "Nom d'utilisateur ou mot de passe erronÃ©(s) !!!");
                            connectButton.setEnabled(true);
                          
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                        if (staticVars.globalSession.isOpen()) {
                            staticVars.globalSession.getTransaction().rollback();
                            staticVars.globalSession.close();
                        }
                        processDiag.dispose();
                        connectButton.setEnabled(true);
                        uiVars.defaultErrorMessage(login_frame.this, "Authentification Ã©chouÃ©e", "Une erreur est survenue lors de la tentative d'authentification.");

                    }
                }
            }.start();
    }//GEN-LAST:event_connectButtonActionPerformed
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        username_T.requestFocus();
    }//GEN-LAST:event_formWindowOpened

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jMenuItem5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login_frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login_frame().setVisible(true);
                //KeyboardFocusManagerPeerImpl.requestFocusFor(login_frame.username_T, CausedFocusEvent.Cause.UNKNOWN);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connectButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem4;
    public static javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPasswordField password_T;
    public static javax.swing.JTextField username_T;
    // End of variables declaration//GEN-END:variables

}
